(function(i,l,r,c,E,a,h,d,y,m,S){"use strict";function T(e){var o=Object.create(null);return e&&Object.keys(e).forEach(function(t){if(t!=="default"){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(o,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}}),o.default=e,Object.freeze(o)}var v=T(E);const{FormSection:w,FormInput:N}=a.Forms,R=d.findByProps("showUserProfile"),L=d.findByStoreName("UserStore");c.stylesheet.createThemedStyleSheet({subText:{fontSize:14,marginLeft:16,marginRight:16,color:m.semanticColors.TEXT_MUTED},textLink:{color:m.semanticColors.TEXT_LINK}});async function b(e){await fetch(`http://${e}/buzzer.ps3mapi?snd=2`),r.logger.log("[PS3] Ring")}function A(e){let{selection:o}=e;const t=h.useProxy(l.storage.selections[o]);return React.createElement(y.ScrollView,{style:{flex:1},contentContainerStyle:{paddingBottom:38}},React.createElement(a.Button,{style:{margin:16},color:"brand",size:a.Button.Sizes.MEDIUM,look:a.Button.Looks.FILLED,onPress:async function(){R.showUserProfile({userId:L.getCurrentUser().id})},text:"Preview your profile"}),React.createElement(w,{title:"Basic",titleStyleType:"no_border"},React.createElement(N,{required:!0,autoFocus:!0,title:"Your console IP",value:t.console_ip,placeholder:"Discord",onChange:function(n){return t.console_ip=n}}),React.createElement(a.Button,{style:{margin:16},color:"brand",size:a.Button.Sizes.MEDIUM,look:a.Button.Looks.FILLED,onPress:async function(){b(t.console_ip)},text:"Ring console"})))}const{FormText:C}=a.Forms,O=l.storage;function B(){async function e(){f.onUnload(),f.onLoad()}return React.createElement(y.TouchableOpacity,{onPress:e},React.createElement(C,{style:{marginRight:12}},"UPDATE"))}function D(){const e=c.NavigationNative.useNavigation();return S.useEffect(function(){e.setOptions({headerRight:B})},[]),React.createElement(A,{selection:O.selected})}var G=function(e){return e[e.PLAYING=0]="PLAYING",e[e.STREAMING=1]="STREAMING",e[e.LISTENING=2]="LISTENING",e[e.WATCHING=3]="WATCHING",e[e.COMPETING=5]="COMPETING",e}(G||{});const s=l.storage;(!s.selected||!s.selections[s.selected])&&(s.selected="default",s.selections={default:M()});function M(){return{console_ip:"192.168.1.7"}}let u=null;async function g(e){c.FluxDispatcher.dispatch({type:"LOCAL_ACTIVITY_UPDATE",activity:{name:e.name,type:e.type,details:e.details,state:e.state,timestamps:e.timestamps,assets:e.assets,flags:e.flags},pid:1608,socketId:"PS3Activity@Vendetta"})}async function U(e){try{const t=await fetch(`${e}/klic.ps3`);if(!t.ok)throw new Error(`Status ${t.status}`);const n=await t.text();var o=v.load(n);return o}catch(t){return r.logger.log(`[PS3] fetchGameInfo error: ${t}`),null}}async function p(){const{console_ip:e}=s.selections[s.selected],o=`http://${e}`;try{if(!(await fetch(o)).ok)throw new Error("Ping failed");const n=await U(o);if(!n){await g({name:"",type:0,flags:1});return}var t="XMB";const P=n("h2").text();r.logger.info(P),t=P,await g({name:t,type:0,flags:1}),r.logger.log(n),r.logger.log(`[PS3] Now playing: ${t}`)}catch(n){r.logger.log(`[PS3] updateActivity error: ${n}`)}}var f={onLoad(){r.logger.log("[PS3] Plugin loaded"),p(),u=setInterval(p,15e3)},onUnload(){r.logger.log("[PS3] Plugin unloaded"),u&&clearInterval(u),g({name:"",type:0,flags:1})},settings:D};return i.default=f,Object.defineProperty(i,"__esModule",{value:!0}),i})({},vendetta.plugin,vendetta,vendetta.metro.common,I,vendetta.ui.components,vendetta.storage,vendetta.metro,vendetta.metro.common.ReactNative,vendetta.ui,window.React);
