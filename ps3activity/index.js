(function(l,c,n,s,o,p,d,y,m,P){"use strict";const{FormSection:S,FormInput:T}=o.Forms,N=d.findByProps("showUserProfile"),w=d.findByStoreName("UserStore");s.stylesheet.createThemedStyleSheet({subText:{fontSize:14,marginLeft:16,marginRight:16,color:m.semanticColors.TEXT_MUTED},textLink:{color:m.semanticColors.TEXT_LINK}});async function R(e){await fetch(`http://${e}/buzzer.ps3mapi?snd=2`),n.logger.log("[PS3] Ring")}function L(e){let{selection:t}=e;const a=p.useProxy(c.storage.selections[t]);return React.createElement(y.ScrollView,{style:{flex:1},contentContainerStyle:{paddingBottom:38}},React.createElement(o.Button,{style:{margin:16},color:"brand",size:o.Button.Sizes.MEDIUM,look:o.Button.Looks.FILLED,onPress:async function(){N.showUserProfile({userId:w.getCurrentUser().id})},text:"Preview your profile"}),React.createElement(S,{title:"Basic",titleStyleType:"no_border"},React.createElement(T,{required:!0,autoFocus:!0,title:"Your console IP",value:a.console_ip,placeholder:"Discord",onChange:function(i){return a.console_ip=i}}),React.createElement(o.Button,{style:{margin:16},color:"brand",size:o.Button.Sizes.MEDIUM,look:o.Button.Looks.FILLED,onPress:async function(){R(a.console_ip)},text:"Ring console"})))}const{FormText:v}=o.Forms,G=c.storage;function A(){async function e(){f.onUnload(),f.onLoad()}return React.createElement(y.TouchableOpacity,{onPress:e},React.createElement(v,{style:{marginRight:12}},"UPDATE"))}function C(){const e=s.NavigationNative.useNavigation();return P.useEffect(function(){e.setOptions({headerRight:A})},[]),React.createElement(L,{selection:G.selected})}var B=function(e){return e[e.PLAYING=0]="PLAYING",e[e.STREAMING=1]="STREAMING",e[e.LISTENING=2]="LISTENING",e[e.WATCHING=3]="WATCHING",e[e.COMPETING=5]="COMPETING",e}(B||{});const r=c.storage;(!r.selected||!r.selections[r.selected])&&(r.selected="default",r.selections={default:M()});function M(){return{console_ip:"192.168.1.7"}}let u=null;async function g(e){s.FluxDispatcher.dispatch({type:"LOCAL_ACTIVITY_UPDATE",activity:{application_id:"0",name:e.name,type:e.type,flags:1},pid:1608,socketId:"PS3Activity@Vendetta"})}async function U(e){try{const t=await fetch(`${e}/klic.ps3`);if(!t.ok)throw new Error(`Status ${t.status}`);return await t.text()}catch(t){return n.logger.log(`[PS3] fetchGameInfo error: ${t}`),null}}function h(e){return e.match(/<h2>(.*?)<\/H2>/)}async function E(){const{console_ip:e}=r.selections[r.selected],t=`http://${e}`;try{if(!(await fetch(t)).ok)throw new Error("Ping failed");const i=await U(t);if(!i){await g({name:"",type:0,flags:1});return}var a="XMB";const I=h(i)[0];n.logger.info(I),a=I.replace(/<h2>|<\/H2>/,""),await g({name:a,type:0,flags:1}),n.logger.log(i),n.logger.log(`[PS3] Now playing: ${a}`)}catch(i){n.logger.log(`[PS3] updateActivity error: ${i}`)}}var f={onLoad(){n.logger.log("[PS3] Plugin loaded"),E(),u=setInterval(E,15e3)},onUnload(){n.logger.log("[PS3] Plugin unloaded"),u&&clearInterval(u),g({name:"",type:0,flags:1})},settings:C};return l.default=f,l.getGameName=h,Object.defineProperty(l,"__esModule",{value:!0}),l})({},vendetta.plugin,vendetta,vendetta.metro.common,vendetta.ui.components,vendetta.storage,vendetta.metro,vendetta.metro.common.ReactNative,vendetta.ui,window.React);
